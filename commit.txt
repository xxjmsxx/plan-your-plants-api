diff --git a/Dockerfile b/Dockerfile
index 493953b..b0972bf 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -17,4 +17,4 @@ COPY . .
 EXPOSE 3000
 
 # migrate and start server
-CMD ["sh", "-c", "bin/rails db:migrate && bin/rails db:seed && bin/rails server -b 0.0.0.0 "]
+CMD ["sh", "-c", "bin/rails db:create db:migrate db:seed && bin/rails server -b 0.0.0.0 "]
diff --git a/Gemfile b/Gemfile
index 4a68ab5..c598eba 100644
--- a/Gemfile
+++ b/Gemfile
@@ -3,7 +3,7 @@ source "https://rubygems.org"
 ruby "3.1.2"
 
 # Rails
-gem "rails", "~> 7.1.3", ">= 7.1.3.3"
+gem "rails", "7.1.3.4"
 
 # Database
 gem "sqlite3", "~> 1.4"
@@ -17,7 +17,7 @@ gem 'bcrypt', '~> 3.1.7'
 # Token authentication
 gem 'jwt'
 
-# postgred
+# postgres
 gem 'pg'
 
 # CORS handling
@@ -29,6 +29,9 @@ gem "tzinfo-data", platforms: %i[ mswin mswin64 mingw x64_mingw jruby ]
 # Reduces boot times through caching; required in config/boot.rb
 gem "bootsnap", require: false
 
+# Database cleaner for tests
+gem 'database_cleaner-active_record'
+
 group :development, :test do
   gem 'rspec-rails', '~> 5.0.0' # Ensure compatibility with Rails 7
   gem 'factory_bot_rails'       # For creating test data
diff --git a/Gemfile.lock b/Gemfile.lock
index 3b5b490..6390797 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -95,6 +95,10 @@ GEM
     concurrent-ruby (1.3.3)
     connection_pool (2.4.1)
     crass (1.0.6)
+    database_cleaner-active_record (2.1.0)
+      activerecord (>= 5.a)
+      database_cleaner-core (~> 2.0.0)
+    database_cleaner-core (2.0.1)
     date (3.3.4)
     debug (1.9.2)
       irb (~> 1.10)
@@ -163,7 +167,7 @@ GEM
     puma (6.4.2)
       nio4r (~> 2.0)
     racc (1.8.0)
-    rack (3.1.2)
+    rack (3.1.3)
     rack-cors (2.0.2)
       rack (>= 2.0.0)
     rack-session (2.0.0)
@@ -206,7 +210,7 @@ GEM
     rdoc (6.7.0)
       psych (>= 4.0.0)
     regexp_parser (2.9.2)
-    reline (0.5.8)
+    reline (0.5.9)
       io-console (~> 0.5)
     rexml (3.3.0)
       strscan
@@ -269,6 +273,7 @@ DEPENDENCIES
   bcrypt (~> 3.1.7)
   bootsnap
   capybara
+  database_cleaner-active_record
   debug
   error_highlight (>= 0.4.0)
   factory_bot_rails
@@ -277,7 +282,7 @@ DEPENDENCIES
   pg
   puma (>= 5.0)
   rack-cors
-  rails (~> 7.1.3, >= 7.1.3.3)
+  rails (= 7.1.3.4)
   rspec-rails (~> 5.0.0)
   selenium-webdriver
   sqlite3 (~> 1.4)
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index 8b7c043..58d0558 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -1,4 +1,3 @@
-# app/controllers/application_controller.rb
 class ApplicationController < ActionController::API
   include ActionController::Cookies
   include ActionController::RequestForgeryProtection
@@ -7,19 +6,17 @@ class ApplicationController < ActionController::API
   before_action :set_csrf_token
 
   def encode_token(payload)
-    JWT.encode(payload, 'your_secret_key')
-  end
-
-  def auth_header
-    request.headers['Authorization']
+    JWT.encode(payload, Rails.application.secret_key_base)
   end
 
   def decoded_token
-    if auth_header
-      token = auth_header.split(' ')[1]
+    if cookies.signed[:jwt]
+      token = cookies.signed[:jwt]
       begin
-        JWT.decode(token, 'your_secret_key', true, algorithm: 'HS256')
-      rescue JWT::DecodeError
+        code = JWT.decode(token, Rails.application.secret_key_base, true, algorithm: 'HS256')
+        code
+      rescue JWT::DecodeError => e
+        Rails.logger.error("JWT decoding error: #{e.message}")
         nil
       end
     end
diff --git a/app/controllers/sessions_controller.rb b/app/controllers/sessions_controller.rb
index 5493e41..57cd0e0 100644
--- a/app/controllers/sessions_controller.rb
+++ b/app/controllers/sessions_controller.rb
@@ -3,11 +3,14 @@ class SessionsController < ApplicationController
 
   def create
     user = User.find_by(email: params[:email])
+    Rails.logger.debug(user)
+
     if user&.authenticate(params[:password])
       token = encode_token({ user_id: user.id })
       cookies.signed[:jwt] = {
         value: token,
         httponly: true,
+        secure: true,
         secure: Rails.env.production?,
         same_site: :strict,
         expires: 1.hour.from_now
@@ -28,6 +31,6 @@ class SessionsController < ApplicationController
   private
 
   def encode_token(payload)
-    JWT.encode(payload, Rails.application.credentials.secret_key_base)
+    JWT.encode(payload, Rails.application.secret_key_base)
   end
 end
diff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb
index 6defa1a..cb68511 100644
--- a/app/controllers/users_controller.rb
+++ b/app/controllers/users_controller.rb
@@ -8,10 +8,14 @@ class UsersController < ApplicationController
     if user.save
       render json: user, status: :created
     else
-      render json: user.errors, status: :unprocessable_entity
+      render json: user.errors, status: :unprocessable_content
     end
   end
 
+  def current_user_info
+    render json: current_user
+  end
+
   private
 
   def user_params
diff --git a/chrome_driver_test.rb b/chrome_driver_test.rb
deleted file mode 100644
index 193cc8d..0000000
--- a/chrome_driver_test.rb
+++ /dev/null
@@ -1,6 +0,0 @@
-require 'selenium-webdriver'
-
-options = Selenium::WebDriver::Chrome::Options.new(args: %w[disable-gpu no-sandbox window-size=1400,1400])
-driver = Selenium::WebDriver.for(:chrome, options: options)
-puts driver.capabilities.browser_version
-driver.quit
diff --git a/config/database.yml b/config/database.yml
index c52c94d..83cf5d4 100644
--- a/config/database.yml
+++ b/config/database.yml
@@ -1,16 +1,22 @@
 default: &default
-  adapter: sqlite3
+  adapter: postgresql
+  encoding: unicode
   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
-  timeout: 5000
+  username: postgres
+  password: password
+  host: localhost
 
 development:
   <<: *default
-  database: db/development.sqlite3
+  database: planyourplantsapi_development
 
 test:
   <<: *default
-  database: db/test.sqlite3
+  database: planyourplantsapi_test
+  username: postgres
+  password: password
+  host: localhost
 
 production:
   <<: *default
-  database: db/production.sqlite3
+  database: planyourplantsapi_production
diff --git a/config/routes.rb b/config/routes.rb
index a795326..8756c35 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -1,7 +1,14 @@
 Rails.application.routes.draw do
-# login
-post 'login', to: 'sessions#create'
-delete 'logout', to: 'sessions#destroy'
+
+# Current_user
+  get '/current_user_info', to: 'users#current_user_info'
+
+# Session actions
+  post 'login', to: 'sessions#create'
+  delete 'logout', to: 'sessions#destroy'
+
+
+
 
 resources :users, only: [:index, :create, :show, :update, :destroy]
 resources :gardens, only: [:index, :show, :create, :update, :destroy]
diff --git a/db/development.sqlite3 b/db/development.sqlite3
deleted file mode 100644
index b1a3669..0000000
Binary files a/db/development.sqlite3 and /dev/null differ
diff --git a/db/development.sqlite3-shm b/db/development.sqlite3-shm
deleted file mode 100644
index fe9ac28..0000000
Binary files a/db/development.sqlite3-shm and /dev/null differ
diff --git a/db/development.sqlite3-wal b/db/development.sqlite3-wal
deleted file mode 100644
index e69de29..0000000
diff --git a/db/schema.rb b/db/schema.rb
index 5cd6ca6..a69e644 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -11,6 +11,9 @@
 # It's strongly recommended that you check this file into your version control system.
 
 ActiveRecord::Schema[7.1].define(version: 2024_06_11_121025) do
+  # These are extensions that must be enabled in order to support this database
+  enable_extension "plpgsql"
+
   create_table "fertilizers", force: :cascade do |t|
     t.string "name"
     t.text "description"
@@ -21,11 +24,11 @@ ActiveRecord::Schema[7.1].define(version: 2024_06_11_121025) do
   end
 
   create_table "garden_plants", force: :cascade do |t|
-    t.integer "plant_id", null: false
-    t.integer "garden_id", null: false
-    t.integer "fertilizer_id", null: false
-    t.datetime "last_watered"
-    t.datetime "last_fertilized"
+    t.bigint "plant_id", null: false
+    t.bigint "garden_id", null: false
+    t.bigint "fertilizer_id", null: false
+    t.datetime "last_watered", precision: nil
+    t.datetime "last_fertilized", precision: nil
     t.integer "health"
     t.text "notes"
     t.datetime "created_at", null: false
@@ -40,7 +43,7 @@ ActiveRecord::Schema[7.1].define(version: 2024_06_11_121025) do
     t.string "location"
     t.integer "size"
     t.string "category"
-    t.integer "user_id", null: false
+    t.bigint "user_id", null: false
     t.datetime "created_at", null: false
     t.datetime "updated_at", null: false
     t.index ["user_id"], name: "index_gardens_on_user_id"
diff --git a/db/seeds.rb b/db/seeds.rb
index fe7213d..99a1c6b 100644
--- a/db/seeds.rb
+++ b/db/seeds.rb
@@ -6,6 +6,8 @@ user_data = [
   { email: 'test1@example.com', password: '123456', username: "test1" },
 ]
 
+puts "Creating Users..."
+
 # Seed users with hashed passwords
 user_data.each do |data|
   user = User.create!(
@@ -13,6 +15,4 @@ user_data.each do |data|
     email: data[:email],
     password: data[:password]
   )
-
-  puts user.password_digest
 end
diff --git a/db/test.sqlite3 b/db/test.sqlite3
deleted file mode 100644
index 210e705..0000000
Binary files a/db/test.sqlite3 and /dev/null differ
diff --git a/db/test.sqlite3-shm b/db/test.sqlite3-shm
deleted file mode 100644
index b6cf90b..0000000
Binary files a/db/test.sqlite3-shm and /dev/null differ
diff --git a/db/test.sqlite3-wal b/db/test.sqlite3-wal
deleted file mode 100644
index 2320682..0000000
Binary files a/db/test.sqlite3-wal and /dev/null differ
diff --git a/docker-compose.yml b/docker-compose.yml
index ea31fe2..b630db0 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -1,3 +1,5 @@
+version: "3.8"
+
 services:
   frontend:
     build:
@@ -7,8 +9,6 @@ services:
       - "5173:5173"
     depends_on:
       - backend
-    environment:
-      - VITE_API_URL=http://backend:3000
     networks:
       - app-network
 
@@ -19,7 +19,7 @@ services:
     ports:
       - "3000:3000"
     environment:
-      - DATABASE_URL=postgresql://postgres:password@db:5432/myapp_development
+      - DATABASE_URL=postgresql://postgres:password@db:5432/planyourplantsapi_development
     depends_on:
       - db
     networks:
@@ -27,12 +27,12 @@ services:
 
   db:
     image: postgres:latest
+    environment:
+      POSTGRES_USER: postgres
+      POSTGRES_PASSWORD: password
+      POSTGRES_DB: planyourplantsapi_development
     ports:
       - "5432:5432"
-    environment:
-      - POSTGRES_USER=postgres
-      - POSTGRES_PASSWORD=password
-      - POSTGRES_DB=myapp_development
     networks:
       - app-network
 
diff --git a/spec/factories/users.rb b/spec/factories/users.rb
index 24d88a0..6949130 100644
--- a/spec/factories/users.rb
+++ b/spec/factories/users.rb
@@ -1,8 +1,8 @@
 FactoryBot.define do
   factory :user do
-    username { 'testuser' }
-    email { 'test@test.com' }
-    password { 'password' }
-    password_confirmation { 'password' }
+    username { 'SantiTrapMaster' }
+    email { 'santi@gmail.com' }
+    password { '123456' }
+    password_confirmation { '123456' }
   end
 end
diff --git a/spec/features/user_authentication_spec.rb b/spec/features/user_authentication_spec.rb
deleted file mode 100644
index 366f844..0000000
--- a/spec/features/user_authentication_spec.rb
+++ /dev/null
@@ -1,24 +0,0 @@
-require 'rails_helper'
-
-RSpec.feature 'User Authentication', type: :feature, js: true do
-  let!(:user) { create(:user, email: 'test@test.com', password: 'password') }
-
-  scenario 'User logs in and logs out' do
-    puts "User created: #{user.inspect}"
-    visit '/login'
-
-    save_and_open_page # This will open the page in a browser for inspection
-
-    fill_in 'Email:', with: 'test@test.com'
-    fill_in 'Password:', with: 'password'
-
-    click_button 'Login'
-
-    expect(page).to have_current_path('/dashboard')
-    expect(page).to have_content('Welcome, ' + user.username)
-
-    click_button 'Logout'
-    expect(page).to have_current_path('/login')
-    expect(page).to have_content('Login')
-  end
-end
diff --git a/spec/features/users/user_authentication_spec.rb b/spec/features/users/user_authentication_spec.rb
index cc9e580..db04875 100644
--- a/spec/features/users/user_authentication_spec.rb
+++ b/spec/features/users/user_authentication_spec.rb
@@ -1,21 +1,22 @@
 require 'rails_helper'
 
 RSpec.feature 'User Authentication', type: :feature, js: true do
+  puts User.count
   let!(:user) { create(:user) }
+  puts User.count
 
 
   scenario 'User logs in and logs out' do
-    puts "User created: #{user.inspect}"
-    visit '/login'
-
-    save_and_open_page # This will open the page in a browser for inspection
 
-    fill_in 'Email:', with: 'test@test.com'
-    fill_in 'Password:', with: 'password'
+    visit '/login'
 
+    fill_in 'Email', with: 'santi@gmail.com'
+    fill_in 'Password', with: '123456'
     click_button 'Login'
 
+
     expect(page).to have_current_path('/dashboard')
+    expect(page).to have_content('Welcome, ' + user.username)
 
     click_button 'Logout'
     expect(page).to have_current_path('/login')
diff --git a/spec/models/user_spec.rb b/spec/models/user_spec.rb
deleted file mode 100644
index 3640686..0000000
--- a/spec/models/user_spec.rb
+++ /dev/null
@@ -1,28 +0,0 @@
-require 'rails_helper'
-
-RSpec.describe User, type: :model do
-  it 'is valid with valid attributes' do
-    user = build(:user)
-    expect(user).to be_valid
-  end
-
-  it 'is not valid without a username' do
-    user = build(:user, username: nil)
-    expect(user).to_not be_valid
-  end
-
-  it 'is not valid without an email' do
-    user = build(:user, email: nil)
-    expect(user).to_not be_valid
-  end
-
-  it 'is not valid without a password' do
-    user = build(:user, password: nil)
-    expect(user).to_not be_valid
-  end
-
-  it 'is not valid if password does not match password_confirmation' do
-    user = build(:user, password_confirmation: 'different')
-    expect(user).to_not be_valid
-  end
-end
diff --git a/spec/rails_helper.rb b/spec/rails_helper.rb
index 4eb64d1..478e1a2 100644
--- a/spec/rails_helper.rb
+++ b/spec/rails_helper.rb
@@ -2,6 +2,8 @@
 require 'spec_helper'
 require 'rspec/rails'
 require 'capybara/rspec'
+require 'capybara/rails'
+require 'database_cleaner/active_record'
 
 # Require support files
 Dir[Rails.root.join('spec/support/**/*.rb')].sort.each { |f| require f }
@@ -15,18 +17,50 @@ rescue ActiveRecord::PendingMigrationError => e
   exit 1
 end
 
+# Capybara silent
+Capybara.server = :puma, {Silent: true}
+
+
 RSpec.configure do |config|
   config.include FactoryBot::Syntax::Methods
   config.include Capybara::DSL, type: :feature
 
-  # Remove this line if you're not using ActiveRecord or ActiveRecord fixtures
-  config.fixture_path = "#{::Rails.root}/spec/fixtures"
-
   # If you're not using ActiveRecord, or you'd prefer not to run each of your
   # examples within a transaction, remove the following line or assign false
   # instead of true.
   config.use_transactional_fixtures = true
 
+
+  RSpec.configure do |config|
+    # Other configurations...
+
+    config.before(:each, type: :feature) do
+      DatabaseCleaner.strategy = :deletion
+    end
+
+    config.before(:each, type: :request) do
+      DatabaseCleaner.strategy = :deletion
+    end
+
+    config.before(:each, type: :controller) do
+      DatabaseCleaner.strategy = :transaction
+    end
+
+    config.before(:each) do
+      DatabaseCleaner.start
+    end
+
+    config.after(:each) do
+      DatabaseCleaner.clean
+    end
+
+    # Other configurations...
+  end
+
+
+  config.before(:suite) do
+    ActiveSupport::Deprecation.silenced = true
+  end
   # RSpec Rails can automatically mix in different behaviours to your tests
   # based on their file location, for example enabling you to call `get` and
   # `post` in specs under `spec/controllers`.
diff --git a/spec/requests/user_sessions_request.rb b/spec/requests/user_sessions_request.rb
deleted file mode 100644
index b77cd01..0000000
--- a/spec/requests/user_sessions_request.rb
+++ /dev/null
@@ -1,38 +0,0 @@
-require 'rails_helper'
-
-RSpec.describe "User Sessions", type: :request do
-  let!(:user) { create(:user, password: 'password', password_confirmation: 'password') }
-
-  describe "POST /login" do
-    context "with valid credentials" do
-      it "logs in the user and returns a JWT" do
-        post '/login', params: { email: user.email, password: 'password' }
-        expect(response).to have_http_status(:ok)
-        expect(response.cookies['jwt']).to be_present
-        expect(response.cookies['auth_status']).to eq('authenticated')
-      end
-    end
-
-    context "with invalid credentials" do
-      it "returns unauthorized status" do
-        post '/login', params: { email: user.email, password: 'wrong_password' }
-        expect(response).to have_http_status(:unauthorized)
-        expect(response.cookies['jwt']).to be_nil
-        expect(response.cookies['auth_status']).to be_nil
-      end
-    end
-  end
-
-  describe "DELETE /logout" do
-    before do
-      post '/login', params: { email: user.email, password: 'password' }
-    end
-
-    it "logs out the user and deletes JWT and auth_status cookies" do
-      delete '/logout'
-      expect(response).to have_http_status(:no_content)
-      expect(response.cookies['jwt']).to be_nil
-      expect(response.cookies['auth_status']).to be_nil
-    end
-  end
-end
diff --git a/spec/requests/users_spec.rb b/spec/requests/users_spec.rb
deleted file mode 100644
index b336f56..0000000
--- a/spec/requests/users_spec.rb
+++ /dev/null
@@ -1,39 +0,0 @@
-require 'rails_helper'
-
-RSpec.describe "Users", type: :request do
-  describe "POST /users" do
-    context "with valid parameters" do
-      it "creates a new user" do
-        expect {
-          post '/users', params: {
-            user: {
-              username: 'testuser',
-              email: 'test@example.com',
-              password: 'password',
-              password_confirmation: 'password'
-            }
-          }
-        }.to change(User, :count).by(1)
-
-        expect(response).to have_http_status(:created)
-      end
-    end
-
-    context "with invalid parameters" do
-      it "does not create a new user" do
-        expect {
-          post '/users', params: {
-            user: {
-              username: '',
-              email: 'test@example.com',
-              password: 'password',
-              password_confirmation: 'password'
-            }
-          }
-        }.to change(User, :count).by(0)
-
-        expect(response).to have_http_status(:unprocessable_entity)
-      end
-    end
-  end
-end
diff --git a/spec/support/capybara.rb b/spec/support/capybara.rb
index 3284827..0160053 100644
--- a/spec/support/capybara.rb
+++ b/spec/support/capybara.rb
@@ -10,13 +10,13 @@ Capybara.register_driver :selenium_chrome do |app|
     app,
     browser: :chrome,
     options: Selenium::WebDriver::Chrome::Options.new(
-      args: %w[disable-gpu no-sandbox window-size=1400,1400]
+      args: %w[headless disable-gpu no-sandbox window-size=1400,1400]
     )
   )
 end
 
-Capybara.default_driver = :selenium_chrome
-Capybara.javascript_driver = :selenium_chrome
+Capybara.default_driver = :selenium_chrome_headless
+Capybara.javascript_driver = :selenium_chrome_headless
 
 # If your React app is running on a different port
 Capybara.app_host = 'http://localhost:5173' # React app URL
diff --git a/test/fixtures/fertilizers.yml b/test/fixtures/fertilizers.yml
deleted file mode 100644
index 9f82341..0000000
--- a/test/fixtures/fertilizers.yml
+++ /dev/null
@@ -1,13 +0,0 @@
-# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-one:
-  name: MyString
-  description: MyText
-  type: 
-  nutrient_ratio: MyString
-
-two:
-  name: MyString
-  description: MyText
-  type: 
-  nutrient_ratio: MyString
diff --git a/test/fixtures/files/.keep b/test/fixtures/files/.keep
deleted file mode 100644
index e69de29..0000000
diff --git a/test/fixtures/garden_plants.yml b/test/fixtures/garden_plants.yml
deleted file mode 100644
index db9954e..0000000
--- a/test/fixtures/garden_plants.yml
+++ /dev/null
@@ -1,19 +0,0 @@
-# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-one:
-  plant: one
-  garden: one
-  fertilizer: one
-  last_watered: 2024-06-11 14:10:23
-  last_fertilized: 2024-06-11 14:10:23
-  health: 1
-  notes: MyText
-
-two:
-  plant: two
-  garden: two
-  fertilizer: two
-  last_watered: 2024-06-11 14:10:23
-  last_fertilized: 2024-06-11 14:10:23
-  health: 1
-  notes: MyText
diff --git a/test/fixtures/gardens.yml b/test/fixtures/gardens.yml
deleted file mode 100644
index cbaf97b..0000000
--- a/test/fixtures/gardens.yml
+++ /dev/null
@@ -1,15 +0,0 @@
-# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-one:
-  name: MyString
-  location: MyString
-  size: 1
-  category: MyString
-  user: one
-
-two:
-  name: MyString
-  location: MyString
-  size: 1
-  category: MyString
-  user: two
diff --git a/test/fixtures/plants.yml b/test/fixtures/plants.yml
deleted file mode 100644
index fc4bbd8..0000000
--- a/test/fixtures/plants.yml
+++ /dev/null
@@ -1,19 +0,0 @@
-# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-one:
-  name: MyString
-  description: MyText
-  water_amount: 1
-  bloom: 2024-06-11
-  weather_preference: MyString
-  sunlight: MyString
-  soil_type: MyString
-
-two:
-  name: MyString
-  description: MyText
-  water_amount: 1
-  bloom: 2024-06-11
-  weather_preference: MyString
-  sunlight: MyString
-  soil_type: MyString
diff --git a/test/fixtures/users.yml b/test/fixtures/users.yml
deleted file mode 100644
index 4b9116d..0000000
--- a/test/fixtures/users.yml
+++ /dev/null
@@ -1,13 +0,0 @@
-# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
-
-one:
-  username: MyString
-  password_digest: MyString
-  email: MyString
-  location: MyString
-
-two:
-  username: MyString
-  password_digest: MyString
-  email: MyString
-  location: MyString
diff --git a/test/test_helper.rb b/test/test_helper.rb
index 0c22470..0c7f428 100644
--- a/test/test_helper.rb
+++ b/test/test_helper.rb
@@ -8,7 +8,6 @@ module ActiveSupport
     parallelize(workers: :number_of_processors)
 
     # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
-    fixtures :all
 
     # Add more helper methods to be used by all tests here...
   end
